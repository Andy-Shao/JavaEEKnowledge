//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.05.13 at 06:13:14 PM CDT 
//

package restful2;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlValue;


@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "" , propOrder = {
    "actor" , "artist" , "aspectRatio" , "audienceRating" , "audioFormat" , "author" , "binding" , "brand" ,
    "catalogNumberList" , "category" , "ceroAgeRating" , "clothingSize" , "color" , "creator" , "department" ,
    "director" , "ean" , "eanList" , "edition" , "eisbn" , "episodeSequence" , "esrbAgeRating" , "feature" , "format" ,
    "genre" , "hardwarePlatform" , "hazardousMaterialType" , "isAdultProduct" , "isAutographed" , "isbn" ,
    "isEligibleForTradeIn" , "isMemorabilia" , "issuesPerYear" , "itemDimensions" , "itemPartNumber" , "label" ,
    "languages" , "legalDisclaimer" , "listPrice" , "magazineType" , "manufacturer" , "manufacturerMaximumAge" ,
    "manufacturerMinimumAge" , "manufacturerPartsWarrantyDescription" , "mediaType" , "model" , "modelYear" , "mpn" ,
    "numberOfDiscs" , "numberOfIssues" , "numberOfItems" , "numberOfPages" , "numberOfTracks" , "operatingSystem" ,
    "packageDimensions" , "packageQuantity" , "partNumber" , "pictureFormat" , "platform" , "productGroup" ,
    "productTypeName" , "productTypeSubcategory" , "publicationDate" , "publisher" , "regionCode" , "releaseDate" ,
    "runningTime" , "seikodoProductCode" , "size" , "sku" , "studio" , "subscriptionLength" , "title" ,
    "trackSequence" , "tradeInValue" , "upc" , "upcList" , "warranty" , "weeeTaxValue"
})
@XmlRootElement(name = "ItemAttributes")
public class ItemAttributes {

    
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "" , propOrder = {
        "catalogNumberListElement"
    })
    public static class CatalogNumberList {

        @XmlElement(name = "CatalogNumberListElement")
        protected List<String> catalogNumberListElement;

        
        public List<String> getCatalogNumberListElement() {
            if (this.catalogNumberListElement == null) this.catalogNumberListElement = new ArrayList<String>();
            return this.catalogNumberListElement;
        }

    }

    
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "" , propOrder = {
        "value"
    })
    public static class Creator {

        @XmlAttribute(name = "Role" , required = true)
        protected String role;
        @XmlValue
        protected String value;

        
        public String getRole() {
            return this.role;
        }

        
        public String getValue() {
            return this.value;
        }

        
        public void setRole(String value) {
            this.role = value;
        }

        
        public void setValue(String value) {
            this.value = value;
        }

    }

    
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "" , propOrder = {
        "eanListElement"
    })
    public static class EANList {

        @XmlElement(name = "EANListElement")
        protected List<String> eanListElement;

        
        public List<String> getEANListElement() {
            if (this.eanListElement == null) this.eanListElement = new ArrayList<String>();
            return this.eanListElement;
        }

    }

    
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "" , propOrder = {
        "height" , "length" , "weight" , "width"
    })
    public static class ItemDimensions {

        @XmlElement(name = "Height")
        protected DecimalWithUnits height;
        @XmlElement(name = "Length")
        protected DecimalWithUnits length;
        @XmlElement(name = "Weight")
        protected DecimalWithUnits weight;
        @XmlElement(name = "Width")
        protected DecimalWithUnits width;

        
        public DecimalWithUnits getHeight() {
            return this.height;
        }

        
        public DecimalWithUnits getLength() {
            return this.length;
        }

        
        public DecimalWithUnits getWeight() {
            return this.weight;
        }

        
        public DecimalWithUnits getWidth() {
            return this.width;
        }

        
        public void setHeight(DecimalWithUnits value) {
            this.height = value;
        }

        
        public void setLength(DecimalWithUnits value) {
            this.length = value;
        }

        
        public void setWeight(DecimalWithUnits value) {
            this.weight = value;
        }

        
        public void setWidth(DecimalWithUnits value) {
            this.width = value;
        }

    }

    
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "" , propOrder = {
        "language"
    })
    public static class Languages {

        
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "" , propOrder = {
            "name" , "type" , "audioFormat"
        })
        public static class Language {

            @XmlElement(name = "AudioFormat")
            protected String audioFormat;
            @XmlElement(name = "Name" , required = true)
            protected String name;
            @XmlElement(name = "Type")
            protected String type;

            
            public String getAudioFormat() {
                return this.audioFormat;
            }

            
            public String getName() {
                return this.name;
            }

            
            public String getType() {
                return this.type;
            }

            
            public void setAudioFormat(String value) {
                this.audioFormat = value;
            }

            
            public void setName(String value) {
                this.name = value;
            }

            
            public void setType(String value) {
                this.type = value;
            }

        }

        @XmlElement(name = "Language")
        protected List<ItemAttributes.Languages.Language> language;

        
        public List<ItemAttributes.Languages.Language> getLanguage() {
            if (this.language == null) this.language = new ArrayList<ItemAttributes.Languages.Language>();
            return this.language;
        }

    }

    
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "" , propOrder = {
        "height" , "length" , "weight" , "width"
    })
    public static class PackageDimensions {

        @XmlElement(name = "Height")
        protected DecimalWithUnits height;
        @XmlElement(name = "Length")
        protected DecimalWithUnits length;
        @XmlElement(name = "Weight")
        protected DecimalWithUnits weight;
        @XmlElement(name = "Width")
        protected DecimalWithUnits width;

        
        public DecimalWithUnits getHeight() {
            return this.height;
        }

        
        public DecimalWithUnits getLength() {
            return this.length;
        }

        
        public DecimalWithUnits getWeight() {
            return this.weight;
        }

        
        public DecimalWithUnits getWidth() {
            return this.width;
        }

        
        public void setHeight(DecimalWithUnits value) {
            this.height = value;
        }

        
        public void setLength(DecimalWithUnits value) {
            this.length = value;
        }

        
        public void setWeight(DecimalWithUnits value) {
            this.weight = value;
        }

        
        public void setWidth(DecimalWithUnits value) {
            this.width = value;
        }

    }

    
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "" , propOrder = {
        "upcListElement"
    })
    public static class UPCList {

        @XmlElement(name = "UPCListElement")
        protected List<String> upcListElement;

        
        public List<String> getUPCListElement() {
            if (this.upcListElement == null) this.upcListElement = new ArrayList<String>();
            return this.upcListElement;
        }

    }

    @XmlElement(name = "Actor")
    protected List<String> actor;
    @XmlElement(name = "Artist")
    protected List<String> artist;
    @XmlElement(name = "AspectRatio")
    protected String aspectRatio;
    @XmlElement(name = "AudienceRating")
    protected String audienceRating;
    @XmlElement(name = "AudioFormat")
    protected List<String> audioFormat;
    @XmlElement(name = "Author")
    protected List<String> author;
    @XmlElement(name = "Binding")
    protected String binding;
    @XmlElement(name = "Brand")
    protected String brand;
    @XmlElement(name = "CatalogNumberList")
    protected ItemAttributes.CatalogNumberList catalogNumberList;
    @XmlElement(name = "Category")
    protected List<String> category;
    @XmlElement(name = "CEROAgeRating")
    protected String ceroAgeRating;
    @XmlElement(name = "ClothingSize")
    protected String clothingSize;
    @XmlElement(name = "Color")
    protected String color;
    @XmlElement(name = "Creator")
    protected List<ItemAttributes.Creator> creator;
    @XmlElement(name = "Department")
    protected String department;
    @XmlElement(name = "Director")
    protected List<String> director;
    @XmlElement(name = "EAN")
    protected String ean;
    @XmlElement(name = "EANList")
    protected ItemAttributes.EANList eanList;
    @XmlElement(name = "Edition")
    protected String edition;
    @XmlElement(name = "EISBN")
    protected List<String> eisbn;
    @XmlElement(name = "EpisodeSequence")
    protected String episodeSequence;
    @XmlElement(name = "ESRBAgeRating")
    protected String esrbAgeRating;
    @XmlElement(name = "Feature")
    protected List<String> feature;
    @XmlElement(name = "Format")
    protected List<String> format;
    @XmlElement(name = "Genre")
    protected String genre;
    @XmlElement(name = "HardwarePlatform")
    protected String hardwarePlatform;
    @XmlElement(name = "HazardousMaterialType")
    protected String hazardousMaterialType;
    @XmlElement(name = "IsAdultProduct")
    protected Boolean isAdultProduct;
    @XmlElement(name = "IsAutographed")
    protected Boolean isAutographed;
    @XmlElement(name = "ISBN")
    protected String isbn;
    @XmlElement(name = "IsEligibleForTradeIn")
    protected Boolean isEligibleForTradeIn;
    @XmlElement(name = "IsMemorabilia")
    protected Boolean isMemorabilia;
    @XmlElement(name = "IssuesPerYear")
    protected String issuesPerYear;
    @XmlElement(name = "ItemDimensions")
    protected ItemAttributes.ItemDimensions itemDimensions;
    @XmlElement(name = "ItemPartNumber")
    protected String itemPartNumber;
    @XmlElement(name = "Label")
    protected String label;
    @XmlElement(name = "Languages")
    protected ItemAttributes.Languages languages;
    @XmlElement(name = "LegalDisclaimer")
    protected String legalDisclaimer;
    @XmlElement(name = "ListPrice")
    protected Price listPrice;
    @XmlElement(name = "MagazineType")
    protected String magazineType;
    @XmlElement(name = "Manufacturer")
    protected String manufacturer;
    @XmlElement(name = "ManufacturerMaximumAge")
    protected DecimalWithUnits manufacturerMaximumAge;
    @XmlElement(name = "ManufacturerMinimumAge")
    protected DecimalWithUnits manufacturerMinimumAge;
    @XmlElement(name = "ManufacturerPartsWarrantyDescription")
    protected String manufacturerPartsWarrantyDescription;
    @XmlElement(name = "MediaType")
    protected String mediaType;
    @XmlElement(name = "Model")
    protected String model;
    @XmlElement(name = "ModelYear")
    @XmlSchemaType(name = "nonNegativeInteger")
    protected BigInteger modelYear;
    @XmlElement(name = "MPN")
    protected String mpn;
    @XmlElement(name = "NumberOfDiscs")
    @XmlSchemaType(name = "nonNegativeInteger")
    protected BigInteger numberOfDiscs;
    @XmlElement(name = "NumberOfIssues")
    @XmlSchemaType(name = "nonNegativeInteger")
    protected BigInteger numberOfIssues;
    @XmlElement(name = "NumberOfItems")
    @XmlSchemaType(name = "nonNegativeInteger")
    protected BigInteger numberOfItems;
    @XmlElement(name = "NumberOfPages")
    @XmlSchemaType(name = "nonNegativeInteger")
    protected BigInteger numberOfPages;
    @XmlElement(name = "NumberOfTracks")
    @XmlSchemaType(name = "nonNegativeInteger")
    protected BigInteger numberOfTracks;
    @XmlElement(name = "OperatingSystem")
    protected String operatingSystem;
    @XmlElement(name = "PackageDimensions")
    protected ItemAttributes.PackageDimensions packageDimensions;
    @XmlElement(name = "PackageQuantity")
    @XmlSchemaType(name = "nonNegativeInteger")
    protected BigInteger packageQuantity;
    @XmlElement(name = "PartNumber")
    protected String partNumber;
    @XmlElement(name = "PictureFormat")
    protected List<String> pictureFormat;
    @XmlElement(name = "Platform")
    protected List<String> platform;
    @XmlElement(name = "ProductGroup")
    protected String productGroup;
    @XmlElement(name = "ProductTypeName")
    protected String productTypeName;
    @XmlElement(name = "ProductTypeSubcategory")
    protected String productTypeSubcategory;
    @XmlElement(name = "PublicationDate")
    protected String publicationDate;
    @XmlElement(name = "Publisher")
    protected String publisher;
    @XmlElement(name = "RegionCode")
    protected String regionCode;
    @XmlElement(name = "ReleaseDate")
    protected String releaseDate;
    @XmlElement(name = "RunningTime")
    protected DecimalWithUnits runningTime;
    @XmlElement(name = "SeikodoProductCode")
    protected String seikodoProductCode;
    @XmlElement(name = "Size")
    protected String size;
    @XmlElement(name = "SKU")
    protected String sku;
    @XmlElement(name = "Studio")
    protected String studio;
    @XmlElement(name = "SubscriptionLength")
    protected NonNegativeIntegerWithUnits subscriptionLength;

    @XmlElement(name = "Title")
    protected String title;

    @XmlElement(name = "TrackSequence")
    protected String trackSequence;

    @XmlElement(name = "TradeInValue")
    protected Price tradeInValue;

    @XmlElement(name = "UPC")
    protected String upc;

    @XmlElement(name = "UPCList")
    protected ItemAttributes.UPCList upcList;

    @XmlElement(name = "Warranty")
    protected String warranty;

    @XmlElement(name = "WEEETaxValue")
    protected Price weeeTaxValue;

    
    public List<String> getActor() {
        if (this.actor == null) this.actor = new ArrayList<String>();
        return this.actor;
    }

    
    public List<String> getArtist() {
        if (this.artist == null) this.artist = new ArrayList<String>();
        return this.artist;
    }

    
    public String getAspectRatio() {
        return this.aspectRatio;
    }

    
    public String getAudienceRating() {
        return this.audienceRating;
    }

    
    public List<String> getAudioFormat() {
        if (this.audioFormat == null) this.audioFormat = new ArrayList<String>();
        return this.audioFormat;
    }

    
    public List<String> getAuthor() {
        if (this.author == null) this.author = new ArrayList<String>();
        return this.author;
    }

    
    public String getBinding() {
        return this.binding;
    }

    
    public String getBrand() {
        return this.brand;
    }

    
    public ItemAttributes.CatalogNumberList getCatalogNumberList() {
        return this.catalogNumberList;
    }

    
    public List<String> getCategory() {
        if (this.category == null) this.category = new ArrayList<String>();
        return this.category;
    }

    
    public String getCEROAgeRating() {
        return this.ceroAgeRating;
    }

    
    public String getClothingSize() {
        return this.clothingSize;
    }

    
    public String getColor() {
        return this.color;
    }

    
    public List<ItemAttributes.Creator> getCreator() {
        if (this.creator == null) this.creator = new ArrayList<ItemAttributes.Creator>();
        return this.creator;
    }

    
    public String getDepartment() {
        return this.department;
    }

    
    public List<String> getDirector() {
        if (this.director == null) this.director = new ArrayList<String>();
        return this.director;
    }

    
    public String getEAN() {
        return this.ean;
    }

    
    public ItemAttributes.EANList getEANList() {
        return this.eanList;
    }

    
    public String getEdition() {
        return this.edition;
    }

    
    public List<String> getEISBN() {
        if (this.eisbn == null) this.eisbn = new ArrayList<String>();
        return this.eisbn;
    }

    
    public String getEpisodeSequence() {
        return this.episodeSequence;
    }

    
    public String getESRBAgeRating() {
        return this.esrbAgeRating;
    }

    
    public List<String> getFeature() {
        if (this.feature == null) this.feature = new ArrayList<String>();
        return this.feature;
    }

    
    public List<String> getFormat() {
        if (this.format == null) this.format = new ArrayList<String>();
        return this.format;
    }

    
    public String getGenre() {
        return this.genre;
    }

    
    public String getHardwarePlatform() {
        return this.hardwarePlatform;
    }

    
    public String getHazardousMaterialType() {
        return this.hazardousMaterialType;
    }

    
    public String getISBN() {
        return this.isbn;
    }

    
    public String getIssuesPerYear() {
        return this.issuesPerYear;
    }

    
    public ItemAttributes.ItemDimensions getItemDimensions() {
        return this.itemDimensions;
    }

    
    public String getItemPartNumber() {
        return this.itemPartNumber;
    }

    
    public String getLabel() {
        return this.label;
    }

    
    public ItemAttributes.Languages getLanguages() {
        return this.languages;
    }

    
    public String getLegalDisclaimer() {
        return this.legalDisclaimer;
    }

    
    public Price getListPrice() {
        return this.listPrice;
    }

    
    public String getMagazineType() {
        return this.magazineType;
    }

    
    public String getManufacturer() {
        return this.manufacturer;
    }

    
    public DecimalWithUnits getManufacturerMaximumAge() {
        return this.manufacturerMaximumAge;
    }

    
    public DecimalWithUnits getManufacturerMinimumAge() {
        return this.manufacturerMinimumAge;
    }

    
    public String getManufacturerPartsWarrantyDescription() {
        return this.manufacturerPartsWarrantyDescription;
    }

    
    public String getMediaType() {
        return this.mediaType;
    }

    
    public String getModel() {
        return this.model;
    }

    
    public BigInteger getModelYear() {
        return this.modelYear;
    }

    
    public String getMPN() {
        return this.mpn;
    }

    
    public BigInteger getNumberOfDiscs() {
        return this.numberOfDiscs;
    }

    
    public BigInteger getNumberOfIssues() {
        return this.numberOfIssues;
    }

    
    public BigInteger getNumberOfItems() {
        return this.numberOfItems;
    }

    
    public BigInteger getNumberOfPages() {
        return this.numberOfPages;
    }

    
    public BigInteger getNumberOfTracks() {
        return this.numberOfTracks;
    }

    
    public String getOperatingSystem() {
        return this.operatingSystem;
    }

    
    public ItemAttributes.PackageDimensions getPackageDimensions() {
        return this.packageDimensions;
    }

    
    public BigInteger getPackageQuantity() {
        return this.packageQuantity;
    }

    
    public String getPartNumber() {
        return this.partNumber;
    }

    
    public List<String> getPictureFormat() {
        if (this.pictureFormat == null) this.pictureFormat = new ArrayList<String>();
        return this.pictureFormat;
    }

    
    public List<String> getPlatform() {
        if (this.platform == null) this.platform = new ArrayList<String>();
        return this.platform;
    }

    
    public String getProductGroup() {
        return this.productGroup;
    }

    
    public String getProductTypeName() {
        return this.productTypeName;
    }

    
    public String getProductTypeSubcategory() {
        return this.productTypeSubcategory;
    }

    
    public String getPublicationDate() {
        return this.publicationDate;
    }

    
    public String getPublisher() {
        return this.publisher;
    }

    
    public String getRegionCode() {
        return this.regionCode;
    }

    
    public String getReleaseDate() {
        return this.releaseDate;
    }

    
    public DecimalWithUnits getRunningTime() {
        return this.runningTime;
    }

    
    public String getSeikodoProductCode() {
        return this.seikodoProductCode;
    }

    
    public String getSize() {
        return this.size;
    }

    
    public String getSKU() {
        return this.sku;
    }

    
    public String getStudio() {
        return this.studio;
    }

    
    public NonNegativeIntegerWithUnits getSubscriptionLength() {
        return this.subscriptionLength;
    }

    
    public String getTitle() {
        return this.title;
    }

    
    public String getTrackSequence() {
        return this.trackSequence;
    }

    
    public Price getTradeInValue() {
        return this.tradeInValue;
    }

    
    public String getUPC() {
        return this.upc;
    }

    
    public ItemAttributes.UPCList getUPCList() {
        return this.upcList;
    }

    
    public String getWarranty() {
        return this.warranty;
    }

    
    public Price getWEEETaxValue() {
        return this.weeeTaxValue;
    }

    
    public Boolean isIsAdultProduct() {
        return this.isAdultProduct;
    }

    
    public Boolean isIsAutographed() {
        return this.isAutographed;
    }

    
    public Boolean isIsEligibleForTradeIn() {
        return this.isEligibleForTradeIn;
    }

    
    public Boolean isIsMemorabilia() {
        return this.isMemorabilia;
    }

    
    public void setAspectRatio(String value) {
        this.aspectRatio = value;
    }

    
    public void setAudienceRating(String value) {
        this.audienceRating = value;
    }

    
    public void setBinding(String value) {
        this.binding = value;
    }

    
    public void setBrand(String value) {
        this.brand = value;
    }

    
    public void setCatalogNumberList(ItemAttributes.CatalogNumberList value) {
        this.catalogNumberList = value;
    }

    
    public void setCEROAgeRating(String value) {
        this.ceroAgeRating = value;
    }

    
    public void setClothingSize(String value) {
        this.clothingSize = value;
    }

    
    public void setColor(String value) {
        this.color = value;
    }

    
    public void setDepartment(String value) {
        this.department = value;
    }

    
    public void setEAN(String value) {
        this.ean = value;
    }

    
    public void setEANList(ItemAttributes.EANList value) {
        this.eanList = value;
    }

    
    public void setEdition(String value) {
        this.edition = value;
    }

    
    public void setEpisodeSequence(String value) {
        this.episodeSequence = value;
    }

    
    public void setESRBAgeRating(String value) {
        this.esrbAgeRating = value;
    }

    
    public void setGenre(String value) {
        this.genre = value;
    }

    
    public void setHardwarePlatform(String value) {
        this.hardwarePlatform = value;
    }

    
    public void setHazardousMaterialType(String value) {
        this.hazardousMaterialType = value;
    }

    
    public void setIsAdultProduct(Boolean value) {
        this.isAdultProduct = value;
    }

    
    public void setIsAutographed(Boolean value) {
        this.isAutographed = value;
    }

    
    public void setISBN(String value) {
        this.isbn = value;
    }

    
    public void setIsEligibleForTradeIn(Boolean value) {
        this.isEligibleForTradeIn = value;
    }

    
    public void setIsMemorabilia(Boolean value) {
        this.isMemorabilia = value;
    }

    
    public void setIssuesPerYear(String value) {
        this.issuesPerYear = value;
    }

    
    public void setItemDimensions(ItemAttributes.ItemDimensions value) {
        this.itemDimensions = value;
    }

    
    public void setItemPartNumber(String value) {
        this.itemPartNumber = value;
    }

    
    public void setLabel(String value) {
        this.label = value;
    }

    
    public void setLanguages(ItemAttributes.Languages value) {
        this.languages = value;
    }

    
    public void setLegalDisclaimer(String value) {
        this.legalDisclaimer = value;
    }

    
    public void setListPrice(Price value) {
        this.listPrice = value;
    }

    
    public void setMagazineType(String value) {
        this.magazineType = value;
    }

    
    public void setManufacturer(String value) {
        this.manufacturer = value;
    }

    
    public void setManufacturerMaximumAge(DecimalWithUnits value) {
        this.manufacturerMaximumAge = value;
    }

    
    public void setManufacturerMinimumAge(DecimalWithUnits value) {
        this.manufacturerMinimumAge = value;
    }

    
    public void setManufacturerPartsWarrantyDescription(String value) {
        this.manufacturerPartsWarrantyDescription = value;
    }

    
    public void setMediaType(String value) {
        this.mediaType = value;
    }

    
    public void setModel(String value) {
        this.model = value;
    }

    
    public void setModelYear(BigInteger value) {
        this.modelYear = value;
    }

    
    public void setMPN(String value) {
        this.mpn = value;
    }

    
    public void setNumberOfDiscs(BigInteger value) {
        this.numberOfDiscs = value;
    }

    
    public void setNumberOfIssues(BigInteger value) {
        this.numberOfIssues = value;
    }

    
    public void setNumberOfItems(BigInteger value) {
        this.numberOfItems = value;
    }

    
    public void setNumberOfPages(BigInteger value) {
        this.numberOfPages = value;
    }

    
    public void setNumberOfTracks(BigInteger value) {
        this.numberOfTracks = value;
    }

    
    public void setOperatingSystem(String value) {
        this.operatingSystem = value;
    }

    
    public void setPackageDimensions(ItemAttributes.PackageDimensions value) {
        this.packageDimensions = value;
    }

    
    public void setPackageQuantity(BigInteger value) {
        this.packageQuantity = value;
    }

    
    public void setPartNumber(String value) {
        this.partNumber = value;
    }

    
    public void setProductGroup(String value) {
        this.productGroup = value;
    }

    
    public void setProductTypeName(String value) {
        this.productTypeName = value;
    }

    
    public void setProductTypeSubcategory(String value) {
        this.productTypeSubcategory = value;
    }

    
    public void setPublicationDate(String value) {
        this.publicationDate = value;
    }

    
    public void setPublisher(String value) {
        this.publisher = value;
    }

    
    public void setRegionCode(String value) {
        this.regionCode = value;
    }

    
    public void setReleaseDate(String value) {
        this.releaseDate = value;
    }

    
    public void setRunningTime(DecimalWithUnits value) {
        this.runningTime = value;
    }

    
    public void setSeikodoProductCode(String value) {
        this.seikodoProductCode = value;
    }

    
    public void setSize(String value) {
        this.size = value;
    }

    
    public void setSKU(String value) {
        this.sku = value;
    }

    
    public void setStudio(String value) {
        this.studio = value;
    }

    
    public void setSubscriptionLength(NonNegativeIntegerWithUnits value) {
        this.subscriptionLength = value;
    }

    
    public void setTitle(String value) {
        this.title = value;
    }

    
    public void setTrackSequence(String value) {
        this.trackSequence = value;
    }

    
    public void setTradeInValue(Price value) {
        this.tradeInValue = value;
    }

    
    public void setUPC(String value) {
        this.upc = value;
    }

    
    public void setUPCList(ItemAttributes.UPCList value) {
        this.upcList = value;
    }

    
    public void setWarranty(String value) {
        this.warranty = value;
    }

    
    public void setWEEETaxValue(Price value) {
        this.weeeTaxValue = value;
    }

}
